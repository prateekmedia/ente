name: "Release (auth) - Linux ARM64"

on:
    push:
        tags:
            - "auth-v*"
    workflow_dispatch:
        inputs:
            tag:
                description: 'Tag name (e.g., auth-v1.0.0)'
                required: true
                type: string

env:
    FLUTTER_VERSION: "3.32.8"

permissions:
    contents: write

jobs:
    build-linux-arm64:
        runs-on: ubuntu-24.04-arm

        defaults:
            run:
                working-directory: mobile/apps/auth

        steps:
            - name: Checkout code and submodules
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Install Flutter ${{ env.FLUTTER_VERSION }}
              uses: subosito/flutter-action@v2
              with:
                  channel: "stable"
                  flutter-version: ${{ env.FLUTTER_VERSION }}
                  cache: true

            - name: Install dependencies for ARM64 desktop build
              run: |
                  sudo apt-get update -y
                  sudo apt-get install -y \
                      libsecret-1-dev \
                      libsodium-dev \
                      libfuse2 \
                      ninja-build \
                      libgtk-3-dev \
                      dpkg-dev \
                      pkg-config \
                      rpm \
                      patchelf \
                      libsqlite3-dev \
                      locate \
                      libayatana-appindicator3-dev \
                      libffi-dev \
                      libtiff5 \
                      xz-utils \
                      libarchive-tools \
                      libcurl4-openssl-dev
                  sudo updatedb

            - name: Install appimagetool
              run: |
                  wget -O appimagetool "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-aarch64.AppImage"
                  chmod +x appimagetool
                  sudo mv appimagetool /usr/local/bin/

            - name: Create artifacts directory
              run: mkdir -p artifacts

            - name: Build ARM64 desktop packages
              run: |
                  # Get tag name
                  if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                    TAG_NAME="${{ inputs.tag }}"
                  else
                    TAG_NAME="${{ github.ref_name }}"
                  fi

                  echo "Building ARM64 packages for: $TAG_NAME"

                  flutter config --enable-linux-desktop
                  dart pub global activate --source git https://github.com/ente-io/flutter_distributor_fork --git-ref develop --git-path packages/flutter_distributor

                  # Build RPM
                  flutter_distributor package --platform=linux --targets=rpm --skip-clean
                  mv dist/**/*-*-linux.rpm artifacts/ente-${TAG_NAME}-arm64.rpm

                  # Build AppImage
                  flutter_distributor package --platform=linux --targets=appimage --skip-clean
                  mv dist/**/*-*-linux.AppImage artifacts/ente-${TAG_NAME}-arm64.AppImage

                  # Build DEB
                  flutter_distributor package --platform=linux --targets=deb --skip-clean
                  mv dist/**/*-*-linux.deb artifacts/ente-${TAG_NAME}-arm64.deb

            - name: List built artifacts
              run: |
                  echo "=== Built artifacts ==="
                  ls -lh artifacts/ || echo "No artifacts found"

            - name: Generate checksums
              run: |
                  cd artifacts
                  if compgen -G "ente-*-arm64.*" > /dev/null; then
                    sha256sum ente-*-arm64.* > sha256sum-linux-arm64
                    echo "=== Checksums ==="
                    cat sha256sum-linux-arm64
                  else
                    echo "Warning: No ARM64 artifacts found"
                  fi

            - name: Create a draft GitHub release
              if: hashFiles('mobile/apps/auth/artifacts/ente-*-arm64.*') != ''
              uses: ncipollo/release-action@v1
              with:
                  artifacts: "mobile/apps/auth/artifacts/*"
                  draft: true
                  allowUpdates: true
                  updateOnlyUnreleased: true

            - name: Upload artifacts
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: auth-linux-arm64-artifacts
                  path: mobile/apps/auth/artifacts/*
                  if-no-files-found: warn
